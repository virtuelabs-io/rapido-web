pool:
  vmImage: 'Ubuntu 16.04'

trigger:
  branches:
    include:
    - master
    - feature/*
    - bug/*

variables:
  imageName: 'rapido-build-web'
  major: 0
  minor: 0
  patch: 1

pr:
  branches:
    include:
    - master

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: 3.6
    architecture: 'x64'

- script: |
    pip install awscli
  displayName: 'Environment Preperation'

- script: |
    aws s3 cp s3://rapido-build-secrets-bucket/environment.staging.ts ./src/environment
    aws s3 cp s3://rapido-build-secrets-bucket/environment.prod.ts ./src/environment
    ls ./src/environment
  env:
    AWS_ACCESS_KEY_ID: $(AWS_ACCESS_KEY_ID)
    AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_ACCESS_KEY)
  displayName: 'Fetch secrets'

- task: NodeTool@0
  inputs:
    versionSpec: '8.x'

- task: Npm@1
  displayName: 'npm install'
  inputs:
    command: install

# - task: Npm@1
#   displayName: 'npm test'
#   inputs:
#     command: custom
#     customCommand: 'test'

# - task: PublishTestResults@2
#   inputs:
#     testResultsFiles: '**/TESTS-*.xml'
#     testRunTitle: 'Rapidobuild test results'
#   condition: succeededOrFailed()

# - task: PublishCodeCoverageResults@1
#   displayName: 'Publishing code coverage'
#   inputs:
#     codeCoverageTool: Cobertura
#     summaryFileLocation: '$(System.DefaultWorkingDirectory)/coverage/rapido-web/index.html'
#     reportDirectory: '$(System.DefaultWorkingDirectory)/coverage'

- script: |
    npm run prodbuild
  displayName: 'Prod build'

- script: |
    docker build -t $DOCKER_REPO/$(imageName):v$(major).$(minor).$(patch) .
  env:
    DOCKER_REPO: $(DOCKER_REPO)
  displayName: 'Build docker image and tag it'

- script: |
    docker login -u $(dockerId) -p $DOCKER_PASSWORD
    docker push $DOCKER_REPO/$(imageName):v$(major).$(minor).$(patch)
    docker tag $DOCKER_REPO/$(imageName):v$(major).$(minor).$(patch) $DOCKER_REPO/$(imageName):latest
    docker push $DOCKER_REPO/$(imageName):latest
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
  env:
    AWS_ACCESS_KEY_ID: $(AWS_ACCESS_KEY_ID)
    AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_ACCESS_KEY)
    DOCKER_REPO: $(DOCKER_REPO)
  displayName: 'Push Docker image'

